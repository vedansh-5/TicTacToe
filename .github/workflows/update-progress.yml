name: Update Progress

on:
  pull_request:
    types: [closed]

jobs:
  update-progress:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PR Info & Generate summary
        id: pr_info
        run: |
          LABELS=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '.[].name' | tr '\n' ',' | tr '[:upper:]' '[:lower:]')
          TITLE=$(echo "${{ github.event.pull_request.title }}" | tr '[:upper:]' '[:lower:]')
          CATEGORY=""

          if [[ "$LABELS" == *"major"* ]] || [[ "$TITLE" == *"major"* ]]; then
            CATEGORY="MAJOR"
          elif [[ "$LABELS" == *"minor"* ]] || [[ "$TITLE" == *"minor"* ]]; then
            CATEGORY="MINOR"
          elif [[ "$LABELS" == *"patch"* ]] || [[ "$TITLE" == *"patch"* ]]; then
            CATEGORY="PATCH"
          fi

          echo "category=$CATEGORY" >> $GITHUB_OUTPUT

          # More robust extraction - look for content between Description and next ### heading
          PR_BODY="${{ github.event.pull_request.body }}"
          SUMMARY=""
          
          if [[ -n "$PR_BODY" ]]; then
            # Extract everything between ### Description and next ### heading
            SUMMARY=$(echo "$PR_BODY" | sed -n '/^###\s*[Dd]escription/,/^###/p' | sed '1d' | sed '/^###/d' | sed '/<!--/,/-->/d' | grep -v '^\s*$' | head -n 2 | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//')
          fi

          # Add dash prefix and fallback to title if empty
          if [[ -n "$SUMMARY" ]]; then
            SUMMARY="- $SUMMARY"
          else
            SUMMARY="- ${{ github.event.pull_request.title }}"
          fi

          echo "summary=$SUMMARY" >> $GITHUB_OUTPUT

      - name: Update PROGRESS.md
        if: steps.pr_info.outputs.category == 'MAJOR' || steps.pr_info.outputs.category == 'MINOR'
        run: |
          if [ ! -f PROGRESS.md ]; then
            echo "# Progress Log" > PROGRESS.md
            echo "" >> PROGRESS.md
          fi

          PR_LINK="[#${{ github.event.pull_request.number }}](${{ github.event.pull_request.html_url }})"
          CONTRIBUTOR="[@${{ github.event.pull_request.user.login }}](${{ github.event.pull_request.user.html_url }})"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # The summary from the previous step already starts with '- '
          echo "${{ steps.pr_info.outputs.summary }} ($PR_LINK) by $CONTRIBUTOR on $TIMESTAMP" >> PROGRESS.md
          echo "" >> PROGRESS.md

          cat PROGRESS.md

      - name: Commit Changes
        if: steps.pr_info.outputs.category == 'MAJOR' || steps.pr_info.outputs.category == 'MINOR'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout main
          git pull origin main
          git add PROGRESS.md
          if ! git diff --staged --quiet; then
            git commit -m "Update progress log for PR #${{ github.event.pull_request.number }}"
            git push origin main
          else
            echo "No changes to commit."
          fi
